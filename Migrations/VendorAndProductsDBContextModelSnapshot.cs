// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurchaseOrderBackEnd.Data;

#nullable disable

namespace PurchaseOrderBackEnd.Migrations
{
    [DbContext(typeof(VendorAndProductsDBContext))]
    partial class VendorAndProductsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PurchaseOrderBackEnd.Products.Products", b =>
                {
                    b.Property<string>("products_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("costprice")
                        .HasColumnType("float");

                    b.Property<int>("eoq")
                        .HasColumnType("int");

                    b.Property<double>("msrp")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("qoh")
                        .HasColumnType("int");

                    b.Property<int>("qoo")
                        .HasColumnType("int");

                    b.Property<byte[]>("qrcode")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("qrcodetxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rop")
                        .HasColumnType("int");

                    b.Property<int>("vendorid")
                        .HasColumnType("int");

                    b.HasKey("products_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PurchaseOrderBackEnd.PurchaseOrders.PurchaseOrderLineItems", b =>
                {
                    b.Property<long>("LineItem_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LineItem_Id"));

                    b.Property<long>("PurchaseOrdersid")
                        .HasColumnType("bigint");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("productid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.HasKey("LineItem_Id");

                    b.HasIndex("PurchaseOrdersid");

                    b.ToTable("PurchaseOrderLineItems");
                });

            modelBuilder.Entity("PurchaseOrderBackEnd.PurchaseOrders.PurchaseOrders", b =>
                {
                    b.Property<long>("po_id")
                        .HasColumnType("bigint");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("podate")
                        .HasColumnType("datetime2");

                    b.Property<long>("vendorid")
                        .HasColumnType("bigint");

                    b.HasKey("po_id");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("PurchaseOrderBackEnd.Vendors.Vendors", b =>
                {
                    b.Property<int>("Vendor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vendor_Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postalcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Vendor_Id");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("PurchaseOrderBackEnd.PurchaseOrders.PurchaseOrderLineItems", b =>
                {
                    b.HasOne("PurchaseOrderBackEnd.PurchaseOrders.PurchaseOrders", null)
                        .WithMany("items")
                        .HasForeignKey("PurchaseOrdersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PurchaseOrderBackEnd.PurchaseOrders.PurchaseOrders", b =>
                {
                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
